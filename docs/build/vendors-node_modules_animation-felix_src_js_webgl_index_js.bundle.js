/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is not neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk"] = self["webpackChunk"] || []).push([["vendors-node_modules_animation-felix_src_js_webgl_index_js"],{

/***/ "./node_modules/animation-felix/src/glsl/gooeyShader.glsl":
/*!****************************************************************!*\
  !*** ./node_modules/animation-felix/src/glsl/gooeyShader.glsl ***!
  \****************************************************************/
/***/ (() => {

eval("throw new Error(\"Module parse failed: Unexpected character '#' (1:0)\\nYou may need an appropriate loader to handle this file type, currently no loaders are configured to process this file. See https://webpack.js.org/concepts#loaders\\n> #pragma glslify: snoise3 = require('glsl-noise/simplex/3d')\\n| \\n| uniform sampler2D u_map;\");\n\n//# sourceURL=webpack:///./node_modules/animation-felix/src/glsl/gooeyShader.glsl?");

/***/ }),

/***/ "./node_modules/animation-felix/src/glsl/revealShader.glsl":
/*!*****************************************************************!*\
  !*** ./node_modules/animation-felix/src/glsl/revealShader.glsl ***!
  \*****************************************************************/
/***/ (() => {

eval("throw new Error(\"Module parse failed: Unexpected character '#' (1:0)\\nYou may need an appropriate loader to handle this file type, currently no loaders are configured to process this file. See https://webpack.js.org/concepts#loaders\\n> #pragma glslify: snoise3 = require('glsl-noise/simplex/3d')\\n| \\n| uniform sampler2D u_map;\");\n\n//# sourceURL=webpack:///./node_modules/animation-felix/src/glsl/revealShader.glsl?");

/***/ }),

/***/ "./node_modules/animation-felix/src/glsl/shapeShader.glsl":
/*!****************************************************************!*\
  !*** ./node_modules/animation-felix/src/glsl/shapeShader.glsl ***!
  \****************************************************************/
/***/ (() => {

eval("throw new Error(\"Module parse failed: Unexpected character '#' (1:0)\\nYou may need an appropriate loader to handle this file type, currently no loaders are configured to process this file. See https://webpack.js.org/concepts#loaders\\n> #pragma glslify: snoise3 = require('glsl-noise/simplex/3d')\\n| \\n| uniform sampler2D u_map;\");\n\n//# sourceURL=webpack:///./node_modules/animation-felix/src/glsl/shapeShader.glsl?");

/***/ }),

/***/ "./node_modules/animation-felix/src/glsl/trippyShader.glsl":
/*!*****************************************************************!*\
  !*** ./node_modules/animation-felix/src/glsl/trippyShader.glsl ***!
  \*****************************************************************/
/***/ (() => {

eval("throw new Error(\"Module parse failed: Unexpected character '#' (1:0)\\nYou may need an appropriate loader to handle this file type, currently no loaders are configured to process this file. See https://webpack.js.org/concepts#loaders\\n> #pragma glslify: snoise3 = require('glsl-noise/simplex/3d')\\n| \\n| uniform sampler2D u_map;\");\n\n//# sourceURL=webpack:///./node_modules/animation-felix/src/glsl/trippyShader.glsl?");

/***/ }),

/***/ "./node_modules/animation-felix/src/glsl/vertexShader.glsl":
/*!*****************************************************************!*\
  !*** ./node_modules/animation-felix/src/glsl/vertexShader.glsl ***!
  \*****************************************************************/
/***/ (() => {

eval("throw new Error(\"Module parse failed: Unexpected token (1:8)\\nYou may need an appropriate loader to handle this file type, currently no loaders are configured to process this file. See https://webpack.js.org/concepts#loaders\\n> varying vec2 v_uv;\\n| \\n| void main() {\");\n\n//# sourceURL=webpack:///./node_modules/animation-felix/src/glsl/vertexShader.glsl?");

/***/ }),

/***/ "./node_modules/animation-felix/src/glsl/waveShader.glsl":
/*!***************************************************************!*\
  !*** ./node_modules/animation-felix/src/glsl/waveShader.glsl ***!
  \***************************************************************/
/***/ (() => {

eval("throw new Error(\"Module parse failed: Unexpected character '#' (1:0)\\nYou may need an appropriate loader to handle this file type, currently no loaders are configured to process this file. See https://webpack.js.org/concepts#loaders\\n> #pragma glslify: snoise3 = require('glsl-noise/simplex/3d')\\n| \\n| uniform sampler2D u_map;\");\n\n//# sourceURL=webpack:///./node_modules/animation-felix/src/glsl/waveShader.glsl?");

/***/ }),

/***/ "./node_modules/animation-felix/src/js/webgl/Detail.js":
/*!*************************************************************!*\
  !*** ./node_modules/animation-felix/src/js/webgl/Detail.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => /* binding */ DetailView\n/* harmony export */ });\n/* harmony import */ var gsap_all__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! gsap/all */ \"./node_modules/gsap/TweenMaxBase.js\");\n/* harmony import */ var gsap_all__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! gsap/all */ \"./node_modules/gsap/TweenLite.js\");\n/* harmony import */ var _vendors_gsap_SplitText__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./vendors/gsap/SplitText */ \"./node_modules/animation-felix/src/js/webgl/vendors/gsap/SplitText.js\");\n/* harmony import */ var _utils_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/utils */ \"./node_modules/animation-felix/src/js/webgl/utils/utils.js\");\n\n\n\n\nclass DetailView {\n\n    constructor() {\n        this.$els = {\n            el: document.querySelector('.detail-view'),\n            closeBtn: document.querySelector('.close-detail'),\n            title: document.querySelector('.detail-view__title'),\n        }\n\n        this.bindEvent()\n    }\n\n    bindEvent() {\n        document.addEventListener('view:toggle', ({ detail }) => { this.toggleReveal(detail) })\n\n        this.$els.closeBtn.addEventListener('click', () => { this.onClose() })\n    }\n\n    onToggleView(shouldOpen = true) {\n        this.$els.el.classList.toggle('is-interactive', shouldOpen)\n        this.$els.el.classList.toggle('is-visible', shouldOpen)\n    }\n\n    onOpen() {\n        const title = this.$els.el.querySelector('.detail-view__title')\n        const text = this.$els.el.querySelectorAll('p')\n        const { title: pageTitle } = APP.Stage.$els\n\n        this.stgs = new _vendors_gsap_SplitText__WEBPACK_IMPORTED_MODULE_0__.SplitText([title, text], { type: 'lines', linesClass: 'line' })\n\n        this.stgs.lines.forEach((l) => {\n            const div = document.createElement('div')\n            div.classList.add('line-ctn')\n            ;(0,_utils_utils__WEBPACK_IMPORTED_MODULE_1__.wrap)(l, div)\n        })\n\n        gsap_all__WEBPACK_IMPORTED_MODULE_2__.default.to(pageTitle, 0.5, {\n            alpha: 0,\n            force3D: true,\n        })\n\n        gsap_all__WEBPACK_IMPORTED_MODULE_2__.default.fromTo(this.$els.closeBtn, 0.5, {\n            rotate: -45,\n            scale: 0,\n            alpha: 0,\n        }, {\n            rotate: 0,\n            scale: 1,\n            alpha: 1,\n            ease: gsap_all__WEBPACK_IMPORTED_MODULE_3__.Power2.easeInOut,\n            force3D: true,\n        })\n\n        gsap_all__WEBPACK_IMPORTED_MODULE_2__.default.staggerFromTo(this.stgs.lines, 0.8, {\n            yPercent: 100,\n        }, {\n            yPercent: 0,\n            ease: gsap_all__WEBPACK_IMPORTED_MODULE_3__.Power3.easeInOut,\n            force3D: true,\n        }, 0.5 / this.stgs.lines.length)\n\n        this.onToggleView()\n    }\n\n    onClose() {\n        const { title: pageTitle } = APP.Stage.$els\n\n        gsap_all__WEBPACK_IMPORTED_MODULE_2__.default.to(pageTitle, 0.5, {\n            alpha: 0.1,\n            force3D: true,\n        })\n\n        gsap_all__WEBPACK_IMPORTED_MODULE_2__.default.staggerTo(this.stgs.lines, 0.8, {\n            yPercent: 100,\n            ease: gsap_all__WEBPACK_IMPORTED_MODULE_3__.Power3.easeInOut,\n            force3D: true,\n        }, 0.5 / this.stgs.lines.length, () => {\n            this.onToggleView(false)\n            ;(0,_utils_utils__WEBPACK_IMPORTED_MODULE_1__.unwrap)(this.stgs.lines)\n        })\n\n        gsap_all__WEBPACK_IMPORTED_MODULE_2__.default.to(this.$els.closeBtn, 0.5, {\n            rotate: -45,\n            scale: 0,\n            alpha: 0,\n            ease: gsap_all__WEBPACK_IMPORTED_MODULE_3__.Power2.easeInOut,\n            force3D: true,\n        })\n\n        gsap_all__WEBPACK_IMPORTED_MODULE_2__.default.delayedCall(0.3, () => {\n            ;(0,_utils_utils__WEBPACK_IMPORTED_MODULE_1__.ev)('toggleDetail', {\n                open: false,\n                force: true,\n            })\n        })\n    }\n\n    toggleReveal({ shouldOpen, target }) {\n        if (!shouldOpen) return\n\n        this.$els.title.innerText = target.$els.title\n        this.onOpen()\n    }\n\n}\n\n\n//# sourceURL=webpack:///./node_modules/animation-felix/src/js/webgl/Detail.js?");

/***/ }),

/***/ "./node_modules/animation-felix/src/js/webgl/Layout.js":
/*!*************************************************************!*\
  !*** ./node_modules/animation-felix/src/js/webgl/Layout.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => /* binding */ Layout\n/* harmony export */ });\n\nclass Layout {\n\n    constructor() {\n        this.isMobile  = window.matchMedia('(max-width: 767px)').matches\n    }\n\n}\n\n\n//# sourceURL=webpack:///./node_modules/animation-felix/src/js/webgl/Layout.js?");

/***/ }),

/***/ "./node_modules/animation-felix/src/js/webgl/Scene.js":
/*!************************************************************!*\
  !*** ./node_modules/animation-felix/src/js/webgl/Scene.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => /* binding */ Scene\n/* harmony export */ });\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! three */ \"./node_modules/three/build/three.module.js\");\n/* harmony import */ var _Tile__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Tile */ \"./node_modules/animation-felix/src/js/webgl/Tile.js\");\n/* harmony import */ var _Detail__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Detail */ \"./node_modules/animation-felix/src/js/webgl/Detail.js\");\n/* harmony import */ var _utils_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils/utils */ \"./node_modules/animation-felix/src/js/webgl/utils/utils.js\");\n/* harmony import */ var _glsl_trippyShader_glsl__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../glsl/trippyShader.glsl */ \"./node_modules/animation-felix/src/glsl/trippyShader.glsl\");\n/* harmony import */ var _glsl_trippyShader_glsl__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_glsl_trippyShader_glsl__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _glsl_shapeShader_glsl__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../glsl/shapeShader.glsl */ \"./node_modules/animation-felix/src/glsl/shapeShader.glsl\");\n/* harmony import */ var _glsl_shapeShader_glsl__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_glsl_shapeShader_glsl__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _glsl_revealShader_glsl__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../glsl/revealShader.glsl */ \"./node_modules/animation-felix/src/glsl/revealShader.glsl\");\n/* harmony import */ var _glsl_revealShader_glsl__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_glsl_revealShader_glsl__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var _glsl_gooeyShader_glsl__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../glsl/gooeyShader.glsl */ \"./node_modules/animation-felix/src/glsl/gooeyShader.glsl\");\n/* harmony import */ var _glsl_gooeyShader_glsl__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(_glsl_gooeyShader_glsl__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var _glsl_waveShader_glsl__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../glsl/waveShader.glsl */ \"./node_modules/animation-felix/src/glsl/waveShader.glsl\");\n/* harmony import */ var _glsl_waveShader_glsl__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(_glsl_waveShader_glsl__WEBPACK_IMPORTED_MODULE_8__);\n\n\n\n\n\n\n\n\n\n\n\nconst perspective = 800\n\nconst shaders = [\n    (_glsl_trippyShader_glsl__WEBPACK_IMPORTED_MODULE_4___default()),\n    (_glsl_shapeShader_glsl__WEBPACK_IMPORTED_MODULE_5___default()),\n    (_glsl_gooeyShader_glsl__WEBPACK_IMPORTED_MODULE_7___default()),\n    (_glsl_waveShader_glsl__WEBPACK_IMPORTED_MODULE_8___default()),\n    (_glsl_revealShader_glsl__WEBPACK_IMPORTED_MODULE_6___default()),\n]\n\nconst durations = [\n    0.5,\n    0.5,\n    0.5,\n    0.8,\n    0.8,\n]\n\nclass Scene {\n\n    constructor($scene) {\n        this.container = $scene\n        this.$tiles = document.querySelectorAll('.slideshow-list__el')\n\n        this.W = window.innerWidth\n        this.H = window.innerHeight\n\n        this.mouse = new three__WEBPACK_IMPORTED_MODULE_0__.Vector2(0, 0)\n        this.activeTile = null\n\n        this.start()\n\n        this.detailview = new _Detail__WEBPACK_IMPORTED_MODULE_2__.default()\n\n\n        this.bindEvent()\n    }\n\n    bindEvent() {\n        document.addEventListener('toggleDetail', ({ detail: shouldOpen }) => { this.onToggleView(shouldOpen) })\n\n        window.addEventListener('resize', () => { this.onResize() })\n    }\n\n\n    start() {\n        this.mainScene = new three__WEBPACK_IMPORTED_MODULE_0__.Scene()\n        this.initCamera()\n        this.initLights()\n\n        this.renderer = new three__WEBPACK_IMPORTED_MODULE_0__.WebGLRenderer({\n            canvas: this.container,\n            alpha: true,\n        })\n        this.renderer.setSize(this.W, this.H)\n        this.renderer.setPixelRatio(window.devicePixelRatio)\n\n        this.tiles = Array.from(this.$tiles).map(($el, i) => new _Tile__WEBPACK_IMPORTED_MODULE_1__.default($el, this, durations[i], shaders[i]))\n\n        this.update()\n    }\n\n    initCamera() {\n        const fov = (180 * (2 * Math.atan(this.H / 2 / perspective))) / Math.PI\n\n        this.camera = new three__WEBPACK_IMPORTED_MODULE_0__.PerspectiveCamera(fov, this.W / this.H, 1, 10000)\n        this.camera.position.set(0, 0, perspective)\n    }\n\n    initLights() {\n        const ambientlight = new three__WEBPACK_IMPORTED_MODULE_0__.AmbientLight(0xffffff, 2)\n        this.mainScene.add(ambientlight)\n    }\n\n\n\n\n    /* Handlers\n    --------------------------------------------------------- */\n\n    onResize() {\n        this.W = window.innerWidth\n        this.H = window.innerHeight\n\n        this.camera.aspect = this.W / this.H\n\n        this.camera.updateProjectionMatrix()\n        this.renderer.setSize(this.W, this.H)\n    }\n\n    onToggleView({ target, open }) {\n        this.activeTile = target // !== undefined ? target : this.activeTile\n\n        ;(0,_utils_utils__WEBPACK_IMPORTED_MODULE_3__.ev)('lockScroll', { lock: open })\n        ;(0,_utils_utils__WEBPACK_IMPORTED_MODULE_3__.ev)('tile:zoom', { tile: this.activeTile, open })\n    }\n\n    /* Actions\n    --------------------------------------------------------- */\n\n    update() {\n        requestAnimationFrame(this.update.bind(this))\n\n        this.tiles.forEach((tile) => {\n            tile.update()\n        })\n\n        this.renderer.render(this.mainScene, this.camera)\n    }\n\n}\n\n\n//# sourceURL=webpack:///./node_modules/animation-felix/src/js/webgl/Scene.js?");

/***/ }),

/***/ "./node_modules/animation-felix/src/js/webgl/Stage.js":
/*!************************************************************!*\
  !*** ./node_modules/animation-felix/src/js/webgl/Stage.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => /* binding */ Stage\n/* harmony export */ });\n/* harmony import */ var gsap_all__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! gsap/all */ \"./node_modules/gsap/TweenMaxBase.js\");\n/* harmony import */ var _utils_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils/utils */ \"./node_modules/animation-felix/src/js/webgl/utils/utils.js\");\n/* harmony import */ var _Scene__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Scene */ \"./node_modules/animation-felix/src/js/webgl/Scene.js\");\n\n\n\n\nconst offsetTitle = 100\n\n\nclass Stage {\n\n    constructor() {\n        this.progress = 0\n\n        this.$els = {\n            title       : document.querySelector('.page-title'),\n            progress    : document.querySelector('.slideshow__progress'),\n            progressCtn : document.querySelector('.slideshow__progress-ctn'),\n            scene       : document.getElementById('scene'),\n        }\n\n\n        this.init()\n\n        this.bindEvents()\n    }\n\n    bindEvents() {\n        document.addEventListener('lockScroll', ({ detail }) => { this.lockScroll(detail) })\n\n        this.Scroll.addListener((s) => { this.onScroll(s) })\n    }\n\n    init() {\n\n        this.Scroll.track.xAxis.element.remove()\n        this.Scroll.track.yAxis.element.remove()\n        \n\n        this.scene = new _Scene__WEBPACK_IMPORTED_MODULE_1__.default(this.$els.scene)\n    }\n\n\n    /* Handlers\n    --------------------------------------------------------- */\n\n    onScroll({ limit, offset }) {\n        this.progress = offset.x / limit.x\n\n        gsap_all__WEBPACK_IMPORTED_MODULE_2__.default.to(this.$els.title, 0.3, { x: -this.progress * offsetTitle, force3D: true })\n        this.updateScrollBar()\n    }\n\n    /* Actions\n    --------------------------------------------------------- */\n\n    updateScrollBar() {\n        const progress = (0,_utils_utils__WEBPACK_IMPORTED_MODULE_0__.map)(this.progress * 100, 0, 100, 5, 100)\n        gsap_all__WEBPACK_IMPORTED_MODULE_2__.default.to(this.$els.progress, 0.3, { xPercent: progress, force3D: true })\n    }\n\n    lockScroll({ lock }) {\n        const duration = lock ? 0 : 1.8\n\n        gsap_all__WEBPACK_IMPORTED_MODULE_2__.default.delayedCall(duration, () => {\n            this.Scroll.updatePluginOptions('horizontalScroll', {\n                events: lock ? [] : [/wheel/],\n            })\n            gsap_all__WEBPACK_IMPORTED_MODULE_2__.default.to(this.$els.progressCtn, 0.5, {\n                alpha: lock ? 0 : 1,\n                force3D: true,\n            })\n        })\n    }\n\n    /* Values\n    --------------------------------------------------------- */\n\n\n}\n\n\n//# sourceURL=webpack:///./node_modules/animation-felix/src/js/webgl/Stage.js?");

/***/ }),

/***/ "./node_modules/animation-felix/src/js/webgl/Tile.js":
/*!***********************************************************!*\
  !*** ./node_modules/animation-felix/src/js/webgl/Tile.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => /* binding */ Tile\n/* harmony export */ });\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! three */ \"./node_modules/three/build/three.module.js\");\n/* harmony import */ var gsap_all__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! gsap/all */ \"./node_modules/gsap/TweenMaxBase.js\");\n/* harmony import */ var gsap_all__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! gsap/all */ \"./node_modules/gsap/TweenLite.js\");\n/* harmony import */ var gsap_all__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! gsap/all */ \"./node_modules/gsap/EasePack.js\");\n/* harmony import */ var _glsl_vertexShader_glsl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../glsl/vertexShader.glsl */ \"./node_modules/animation-felix/src/glsl/vertexShader.glsl\");\n/* harmony import */ var _glsl_vertexShader_glsl__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_glsl_vertexShader_glsl__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _vendors_gsap_SplitText__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./vendors/gsap/SplitText */ \"./node_modules/animation-felix/src/js/webgl/vendors/gsap/SplitText.js\");\n/* harmony import */ var _utils_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils/utils */ \"./node_modules/animation-felix/src/js/webgl/utils/utils.js\");\n\n\n\n\n\n\n\nclass Tile {\n\n    constructor($el, scene, duration, fragmentShader) {\n        this.scene = scene\n        this.$els = {\n            body: document.body,\n            el: $el,\n            link: $el.querySelector('a'),\n            text: $el.querySelectorAll('.tile__title, .tile__cta'),\n            title: $el.querySelector('.tile__title').innerText,\n        }\n\n        this.duration = duration\n\n        this.mainImage = this.$els.el.querySelector('img')\n        this.images = []\n        this.sizes = new three__WEBPACK_IMPORTED_MODULE_0__.Vector2(0, 0)\n        this.offset = new three__WEBPACK_IMPORTED_MODULE_0__.Vector2(0, 0)\n\n        this.vertexShader = (_glsl_vertexShader_glsl__WEBPACK_IMPORTED_MODULE_1___default())\n        this.fragmentShader = fragmentShader\n\n        this.clock = new three__WEBPACK_IMPORTED_MODULE_0__.Clock()\n\n        this.mouse = new three__WEBPACK_IMPORTED_MODULE_0__.Vector2(0, 0)\n\n        this.scroll = 0\n        this.prevScroll = 0\n        this.delta = 0\n        this.hasClicked = false\n        this.isZoomed = false\n\n        this.loader = new three__WEBPACK_IMPORTED_MODULE_0__.TextureLoader()\n        this.preload([this.mainImage.src, this.mainImage.dataset.hover, '/dist/img/shape.jpg'], () => { this.initTile() })\n\n        this.bindEvent()\n    }\n\n    bindEvent() {\n        document.addEventListener('tile:zoom', ({ detail }) => { this.zoom(detail) })\n\n\n        window.addEventListener('resize', () => { this.onResize() })\n        window.addEventListener('mousemove', (e) => { this.onMouseMove(e) })\n\n        this.$els.link.addEventListener('mouseenter', () => { this.onPointerEnter() })\n        this.$els.link.addEventListener('mouseleave', () => { this.onPointerLeave() })\n        this.$els.link.addEventListener('click', (e) => { this.onClick(e) })\n\n        this.Scroll.addListener((s) => { this.onScroll(s) })\n    }\n\n    /* Handlers\n    --------------------------------------------------------- */\n\n    onClick(e) {\n        e.preventDefault()\n\n        if (APP.Layout.isMobile) return\n\n        if (!this.mesh) return\n\n        this.hasClicked = true\n\n        ;(0,_utils_utils__WEBPACK_IMPORTED_MODULE_3__.ev)('toggleDetail', {\n            open: true,\n            target: this,\n        })\n    }\n\n    onPointerEnter() {\n        this.isHovering = true\n\n        if (this.isZoomed || this.hasClicked || APP.Layout.isMobile) return\n\n        const idx = (0,_utils_utils__WEBPACK_IMPORTED_MODULE_3__.clamp)([...this.$els.el.parentElement.children].indexOf(this.$els.el) + 1, 1, 5)\n\n        document.documentElement.style.setProperty('--color-bg', `var(--color-bg${idx})`)\n        document.documentElement.style.setProperty('--color-text', `var(--color-text${idx})`)\n\n        if (!this.mesh) return\n\n        gsap_all__WEBPACK_IMPORTED_MODULE_4__.default.to(this.uniforms.u_progressHover, this.duration, {\n            value: 1,\n            ease: gsap_all__WEBPACK_IMPORTED_MODULE_5__.Power2.easeInOut,\n        })\n    }\n\n    onPointerLeave() {\n        if (!this.mesh || this.isZoomed || this.hasClicked || APP.Layout.isMobile) return\n\n        gsap_all__WEBPACK_IMPORTED_MODULE_4__.default.to(this.uniforms.u_progressHover, this.duration, {\n            value: 0,\n            ease: gsap_all__WEBPACK_IMPORTED_MODULE_5__.Power2.easeInOut,\n            onComplete: () => {\n                this.isHovering = false\n            },\n        })\n    }\n\n    onResize() {\n        this.getBounds()\n\n        if (!this.mesh) return\n\n        this.mesh.scale.set(this.sizes.x, this.sizes.y, 1)\n        this.uniforms.u_res.value.set(window.innerWidth, window.innerHeight)\n    }\n\n    onScroll({ offset, limit }) {\n        this.scroll = offset.x / limit.x\n    }\n\n    onMouseMove(event) {\n        if (this.isZoomed || this.hasClicked || APP.Layout.isMobile) return\n\n        gsap_all__WEBPACK_IMPORTED_MODULE_4__.default.to(this.mouse, 0.5, {\n            x: event.clientX,\n            y: event.clientY,\n        })\n    }\n\n\n    /* Actions\n    --------------------------------------------------------- */\n\n    initTile() {\n        this.stgs = new _vendors_gsap_SplitText__WEBPACK_IMPORTED_MODULE_2__.SplitText(this.$els.text, { type: 'lines', linesClass: 'line' })\n\n        this.stgs.lines.forEach((l) => {\n            const div = document.createElement('div')\n            div.classList.add('line-ctn')\n            ;(0,_utils_utils__WEBPACK_IMPORTED_MODULE_3__.wrap)(l, div)\n        })\n\n        const texture = this.images[0]\n        const hoverTexture = this.images[1]\n\n        this.getBounds()\n\n        this.uniforms = {\n            u_alpha: { value: 1 },\n            u_map: { type: 't', value: texture },\n            u_ratio: { value: (0,_utils_utils__WEBPACK_IMPORTED_MODULE_3__.getRatio)(this.sizes, texture.image) },\n            u_hovermap: { type: 't', value: hoverTexture },\n            u_hoverratio: { value: (0,_utils_utils__WEBPACK_IMPORTED_MODULE_3__.getRatio)(this.sizes, hoverTexture.image) },\n            u_shape: { value: this.images[2] },\n            u_mouse: { value: this.mouse },\n            u_progressHover: { value: 0 },\n            u_progressClick: { value: 0 },\n            u_time: { value: this.clock.getElapsedTime() },\n            u_res: { value: new three__WEBPACK_IMPORTED_MODULE_0__.Vector2(window.innerWidth, window.innerHeight) },\n        }\n\n        this.geometry = new three__WEBPACK_IMPORTED_MODULE_0__.PlaneBufferGeometry(1, 1, 1, 1)\n\n        this.material = new three__WEBPACK_IMPORTED_MODULE_0__.ShaderMaterial({\n            uniforms: this.uniforms,\n            vertexShader: this.vertexShader,\n            fragmentShader: this.fragmentShader,\n            transparent: true,\n            defines: {\n                PI: Math.PI,\n                PR: window.devicePixelRatio.toFixed(1),\n            },\n        })\n\n        this.mesh = new three__WEBPACK_IMPORTED_MODULE_0__.Mesh(this.geometry, this.material)\n\n        this.mesh.position.x = this.offset.x\n        this.mesh.position.y = this.offset.y\n\n        this.mesh.scale.set(this.sizes.x, this.sizes.y, 1)\n\n        this.scene.mainScene.add(this.mesh)\n\n        this.mainImage.classList.add('is-loaded')\n    }\n\n    move() {\n        if (!this.mesh || this.isZoomed || this.hasClicked) return\n        this.getBounds()\n\n        gsap_all__WEBPACK_IMPORTED_MODULE_4__.default.set(this.mesh.position, {\n            x: this.offset.x,\n            y: this.offset.y,\n        })\n\n        gsap_all__WEBPACK_IMPORTED_MODULE_4__.default.to(this.mesh.scale, 0.3, {\n            x: this.sizes.x - this.delta,\n            y: this.sizes.y - this.delta,\n            z: 1,\n        })\n    }\n\n    update() {\n        this.delta = Math.abs((this.scroll - this.prevScroll) * 2000)\n\n        if (!this.mesh) return\n\n        this.move()\n\n        this.prevScroll = this.scroll\n\n        if (!this.isHovering) return\n        this.uniforms.u_time.value += this.clock.getDelta()\n    }\n\n    zoom({ tile, open }) {\n        const shouldZoom = tile === this\n\n        const newScl = {\n            x: shouldZoom ? window.innerWidth * 0.44 : this.sizes.x,\n            y: shouldZoom ? window.innerHeight - 140 : this.sizes.y,\n        }\n\n        const newPos = {\n            x: shouldZoom ? window.innerWidth / 2 - window.innerWidth * 0.05 - this.sizes.x * 0.95 : this.offset.x,\n            y: shouldZoom ? -20 : this.offset.y,\n        }\n\n        const newRatio = (0,_utils_utils__WEBPACK_IMPORTED_MODULE_3__.getRatio)(newScl, this.images[1].image)\n\n        const delay = shouldZoom ? 0.4 : 0\n\n        this.hide(!shouldZoom, !open)\n\n        gsap_all__WEBPACK_IMPORTED_MODULE_4__.default.to(this.uniforms.u_progressClick, 1.2, {\n            value: shouldZoom ? 1 : 0,\n            ease: gsap_all__WEBPACK_IMPORTED_MODULE_5__.Power2.easeInOut,\n            onComplete: () => {\n                this.isZoomed = shouldZoom\n                this.hasClicked = open\n\n                gsap_all__WEBPACK_IMPORTED_MODULE_4__.default.to(this.uniforms.u_progressHover, this.duration, {\n                    value: shouldZoom ? 1 : 0,\n                    ease: gsap_all__WEBPACK_IMPORTED_MODULE_5__.Power2.easeInOut,\n                })\n\n                ;(0,_utils_utils__WEBPACK_IMPORTED_MODULE_3__.ev)('view:toggle', { shouldOpen: shouldZoom, target: this })\n            },\n        })\n\n        gsap_all__WEBPACK_IMPORTED_MODULE_4__.default.to(this.mesh.scale, 1.2, {\n            delay,\n            x: newScl.x,\n            y: newScl.y,\n            ease: gsap_all__WEBPACK_IMPORTED_MODULE_6__.Expo.easeInOut,\n            onUpdate: () => { this.getBounds() },\n        })\n\n        gsap_all__WEBPACK_IMPORTED_MODULE_4__.default.to(this.mesh.position, 1.2, {\n            delay,\n            x: newPos.x,\n            y: newPos.y,\n            ease: gsap_all__WEBPACK_IMPORTED_MODULE_6__.Expo.easeInOut,\n        })\n\n        gsap_all__WEBPACK_IMPORTED_MODULE_4__.default.to(this.uniforms.u_hoverratio.value, 1.2, {\n            delay,\n            x: newRatio.x,\n            y: newRatio.y,\n            ease: gsap_all__WEBPACK_IMPORTED_MODULE_6__.Expo.easeInOut,\n        })\n\n        gsap_all__WEBPACK_IMPORTED_MODULE_4__.default.staggerTo(this.stgs.lines, 1, {\n            yPercent: shouldZoom ? 100 : 0,\n            ease: gsap_all__WEBPACK_IMPORTED_MODULE_6__.Expo.easeInOut,\n            force3D: true,\n        }, 0.35 / this.stgs.lines.length)\n    }\n\n\n    hide(shouldHide, force) {\n        const delay = shouldHide && !force ? 0 : 1.2\n        gsap_all__WEBPACK_IMPORTED_MODULE_4__.default.to(this.uniforms.u_alpha, 0.5, {\n            delay,\n            value: shouldHide && !force ? 0 : 1,\n            ease: gsap_all__WEBPACK_IMPORTED_MODULE_5__.Power3.easeIn,\n        })\n\n        gsap_all__WEBPACK_IMPORTED_MODULE_4__.default.to(this.$els.el, 0.5, {\n            delay,\n            alpha: shouldHide && !force ? 0 : 1,\n            force3D: true,\n        })\n    }\n\n\n    /* Values\n    --------------------------------------------------------- */\n\n    getBounds() {\n        const { width, height, left, top } = this.mainImage.getBoundingClientRect()\n\n        if (!this.sizes.equals(new three__WEBPACK_IMPORTED_MODULE_0__.Vector2(width, height))) {\n            this.sizes.set(width, height)\n        }\n\n        if (!this.offset.equals(new three__WEBPACK_IMPORTED_MODULE_0__.Vector2(left - window.innerWidth / 2 + width / 2, -top + window.innerHeight / 2 - height / 2))) {\n            this.offset.set(left - window.innerWidth / 2 + width / 2, -top + window.innerHeight / 2 - height / 2)\n        }\n    }\n\n    preload($els, allImagesLoadedCallback) {\n        let loadedCounter = 0\n        const toBeLoadedNumber = $els.length\n        const preloadImage = ($el, anImageLoadedCallback) => {\n            const image = this.loader.load($el, anImageLoadedCallback)\n            image.center.set(0.5, 0.5)\n            this.images.push(image)\n        }\n\n        $els.forEach(($el) => {\n            preloadImage($el, () => {\n                loadedCounter += 1\n                if (loadedCounter === toBeLoadedNumber) {\n                    allImagesLoadedCallback()\n                }\n            })\n        })\n    }\n\n}\n\n\n\n//# sourceURL=webpack:///./node_modules/animation-felix/src/js/webgl/Tile.js?");

/***/ }),

/***/ "./node_modules/animation-felix/src/js/webgl/index.js":
/*!************************************************************!*\
  !*** ./node_modules/animation-felix/src/js/webgl/index.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _sass_styles_scss__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./sass/styles.scss */ \"./node_modules/animation-felix/src/js/webgl/sass/styles.scss\");\n/* harmony import */ var _Stage__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Stage */ \"./node_modules/animation-felix/src/js/webgl/Stage.js\");\n/* harmony import */ var _Layout__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Layout */ \"./node_modules/animation-felix/src/js/webgl/Layout.js\");\n\n\n\n\nconst APP = window.APP || {}\n\n/*-----------------------------------------------------------------------------------*/\n/*  01. INIT\n/*-----------------------------------------------------------------------------------*/\n\nconst initApp = () => {\n    window.APP = APP\n\n    APP.Stage = new _Stage__WEBPACK_IMPORTED_MODULE_1__.default()\n    APP.Layout = new _Layout__WEBPACK_IMPORTED_MODULE_2__.default()\n}\n\nif (document.readyState === 'complete' || (document.readyState !== 'loading' && !document.documentElement.doScroll)) {\n    initApp()\n} else {\n    document.addEventListener('DOMContentLoaded', initApp)\n}\n\n\n//# sourceURL=webpack:///./node_modules/animation-felix/src/js/webgl/index.js?");

/***/ }),

/***/ "./node_modules/animation-felix/src/js/webgl/utils/utils.js":
/*!******************************************************************!*\
  !*** ./node_modules/animation-felix/src/js/webgl/utils/utils.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"clamp\": () => /* binding */ clamp,\n/* harmony export */   \"map\": () => /* binding */ map,\n/* harmony export */   \"getRatio\": () => /* binding */ getRatio,\n/* harmony export */   \"wrap\": () => /* binding */ wrap,\n/* harmony export */   \"unwrap\": () => /* binding */ unwrap,\n/* harmony export */   \"ev\": () => /* binding */ ev\n/* harmony export */ });\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! three */ \"./node_modules/three/build/three.module.js\");\n\n\n// eslint-disable-next-line import/prefer-default-export\nconst clamp = (val, min = 0, max = 1) => Math.max(min, Math.min(max, val))\n\nconst map = (value, min1, max1, min2, max2) => min2 + (max2 - min2) * (value - min1) / (max1 - min1)\n\nconst getRatio = ({ x: w, y: h }, { width, height }, r = 0) => {\n    const m = multiplyMatrixAndPoint(rotateMatrix(three__WEBPACK_IMPORTED_MODULE_0__.Math.degToRad(r)), [w, h])\n    const originalRatio = {\n        w: m[0] / width,\n        h: m[1] / height,\n    }\n\n    const coverRatio = 1 / Math.max(originalRatio.w, originalRatio.h)\n\n    return new three__WEBPACK_IMPORTED_MODULE_0__.Vector2(\n        originalRatio.w * coverRatio,\n        originalRatio.h * coverRatio,\n    )\n}\n\n\nconst rotateMatrix = (a) => [Math.cos(a), -Math.sin(a), Math.sin(a), Math.cos(a)]\n\nconst multiplyMatrixAndPoint = (matrix, point) => {\n    const c0r0 = matrix[0]\n    const c1r0 = matrix[1]\n    const c0r1 = matrix[2]\n    const c1r1 = matrix[3]\n    const x = point[0]\n    const y = point[1]\n    return [Math.abs(x * c0r0 + y * c0r1), Math.abs(x * c1r0 + y * c1r1)]\n}\n\nconst wrap = (el, wrapper) => {\n    el.parentNode.insertBefore(wrapper, el)\n    wrapper.appendChild(el)\n}\n\n\nconst unwrap = (content) => {\n    for (let i = 0; i < content.length; i++) {\n        const el     = content[i]\n        const parent = el.parentNode\n\n        if (parent.parentNode) parent.outerHTML = el.innerHTML\n    }\n}\n\nconst ev = (eventName, data, once = false) => {\n    const e = new CustomEvent(eventName, { detail: data }, { once })\n    document.dispatchEvent(e)\n}\n\n\n//# sourceURL=webpack:///./node_modules/animation-felix/src/js/webgl/utils/utils.js?");

/***/ }),

/***/ "./node_modules/animation-felix/src/js/webgl/vendors/gsap/SplitText.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/animation-felix/src/js/webgl/vendors/gsap/SplitText.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"SplitText\": () => /* binding */ SplitText,\n/* harmony export */   \"default\": () => /* binding */ SplitText\n/* harmony export */ });\n/* harmony import */ var gsap_TweenLite_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! gsap/TweenLite.js */ \"./node_modules/gsap/TweenLite.js\");\n/*!\n * VERSION: 0.6.1\n * DATE: 2018-08-27\n * UPDATES AND DOCS AT: http://greensock.com\n *\n * @license Copyright (c) 2008-2018, GreenSock. All rights reserved.\n * SplitText is a Club GreenSock membership benefit; You must have a valid membership to use\n * this code without violating the terms of use. Visit http://greensock.com/club/ to sign up or get more details.\n * This work is subject to the software agreement that was issued with your membership.\n * \n * @author: Jack Doyle, jack@greensock.com\n */\n\n\n\n(function(window) {\n\t\n\t\"use strict\";\n\tvar _globals = window.GreenSockGlobals || window,\n\t\t_namespace = function(ns) {\n\t\t\tvar a = ns.split(\".\"),\n\t\t\t\tp = _globals, i;\n\t\t\tfor (i = 0; i < a.length; i++) {\n\t\t\t\tp[a[i]] = p = p[a[i]] || {};\n\t\t\t}\n\t\t\treturn p;\n\t\t},\n\t\tpkg = _namespace(\"com.greensock.utils\"),\n\t\t_getText = function(e) {\n\t\t\tvar type = e.nodeType,\n\t\t\t\tresult = \"\";\n\t\t\tif (type === 1 || type === 9 || type === 11) {\n\t\t\t\tif (typeof(e.textContent) === \"string\") {\n\t\t\t\t\treturn e.textContent;\n\t\t\t\t} else {\n\t\t\t\t\tfor ( e = e.firstChild; e; e = e.nextSibling ) {\n\t\t\t\t\t\tresult += _getText(e);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (type === 3 || type === 4) {\n\t\t\t\treturn e.nodeValue;\n\t\t\t}\n\t\t\treturn result;\n\t\t},\n\t\t_doc = document,\n\t\t_getComputedStyle = _doc.defaultView ? _doc.defaultView.getComputedStyle : function() {},\n\t\t_capsExp = /([A-Z])/g,\n\t\t_getStyle = function(t, p, cs, str) {\n\t\t\tvar result;\n\t\t\tif ((cs = cs || _getComputedStyle(t, null))) {\n\t\t\t\tt = cs.getPropertyValue(p.replace(_capsExp, \"-$1\").toLowerCase());\n\t\t\t\tresult = (t || cs.length) ? t : cs[p]; //Opera behaves VERY strangely - length is usually 0 and cs[p] is the only way to get accurate results EXCEPT when checking for -o-transform which only works with cs.getPropertyValue()!\n\t\t\t} else if (t.currentStyle) {\n\t\t\t\tcs = t.currentStyle;\n\t\t\t\tresult = cs[p];\n\t\t\t}\n\t\t\treturn str ? result : parseInt(result, 10) || 0;\n\t\t},\n\t\t_isArrayLike = function(e) {\n\t\t\treturn (e.length && e[0] && ((e[0].nodeType && e[0].style && !e.nodeType) || (e[0].length && e[0][0]))) ? true : false; //could be an array of jQuery objects too, so accommodate that.\n\t\t},\n\t\t_flattenArray = function(a) {\n\t\t\tvar result = [],\n\t\t\t\tl = a.length,\n\t\t\t\ti, e, j;\n\t\t\tfor (i = 0; i < l; i++) {\n\t\t\t\te = a[i];\n\t\t\t\tif (_isArrayLike(e)) {\n\t\t\t\t\tj = e.length;\n\t\t\t\t\tfor (j = 0; j < e.length; j++) {\n\t\t\t\t\t\tresult.push(e[j]);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tresult.push(e);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn result;\n\t\t},\n\t\t//some characters are combining marks (think diacritics/accents in European languages) which involve 2 or 4 characters that combine in the browser to form a single character. Pass in the remaining text and an array of the special characters to search for and if the text starts with one of those special characters, it'll spit back the number of characters to retain (often 2 or 4). Used in the specialChars features that was introduced in 0.6.0.\n\t\t_findSpecialChars = function(text, chars) {\n\t\t\tvar i = chars.length,\n\t\t\t\ts;\n\t\t\twhile (--i > -1) {\n\t\t\t\ts = chars[i];\n\t\t\t\tif (text.substr(0, s.length) === s) {\n\t\t\t\t\treturn s.length;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t_stripExp = /(?:\\r|\\n|\\t\\t)/g, //find carriage returns, new line feeds and double-tabs.\n\t\t_multipleSpacesExp = /(?:\\s\\s+)/g,\n\t\t_emojiStart = 0xD800,\n\t\t_emojiEnd = 0xDBFF,\n\t\t_emojiLowStart = 0xDC00,\n\t\t_emojiRegionStart = 0x1F1E6,\n\t\t_emojiRegionEnd = 0x1F1FF,\n\t\t_emojiModStart = 0x1f3fb,\n\t\t_emojiModEnd = 0x1f3ff,\n\t\t_emojiPairCode = function(s) {\n\t\t\treturn ((s.charCodeAt(0) - _emojiStart) << 10) + (s.charCodeAt(1) - _emojiLowStart) + 0x10000;\n\t\t},\n\t\t_isOldIE = (_doc.all && !_doc.addEventListener),\n\t\t_divStart = \" style='position:relative;display:inline-block;\" + (_isOldIE ? \"*display:inline;*zoom:1;'\" : \"'\"), //note: we must use both display:inline-block and *display:inline for IE8 and earlier, otherwise it won't flow correctly (and if we only use display:inline, IE won't render most of the property tweens - very odd).\n\t\t_cssClassFunc = function(cssClass, tag) {\n\t\t\tcssClass = cssClass || \"\";\n\t\t\tvar iterate = (cssClass.indexOf(\"++\") !== -1),\n\t\t\t\tnum = 1;\n\t\t\tif (iterate) {\n\t\t\t\tcssClass = cssClass.split(\"++\").join(\"\");\n\t\t\t}\n\t\t\treturn function() {\n\t\t\t\treturn \"<\" + tag + _divStart + (cssClass ? \" class='\" + cssClass + (iterate ? num++ : \"\") + \"'>\" : \">\");\n\t\t\t};\n\t\t},\n\t\tSplitText = pkg.SplitText = _globals.SplitText = function(element, vars) {\n\t\t\tif (typeof(element) === \"string\") {\n\t\t\t\telement = SplitText.selector(element);\n\t\t\t}\n\t\t\tif (!element) {\n\t\t\t\tthrow(\"cannot split a null element.\");\n\t\t\t}\n\t\t\tthis.elements = _isArrayLike(element) ? _flattenArray(element) : [element];\n\t\t\tthis.chars = [];\n\t\t\tthis.words = [];\n\t\t\tthis.lines = [];\n\t\t\tthis._originals = [];\n\t\t\tthis.vars = vars || {};\n\t\t\tthis.split(vars);\n\t\t},\n\t\t_swapText = function(element, oldText, newText) {\n\t\t\tvar type = element.nodeType;\n\t\t\tif (type === 1 || type === 9 || type === 11) {\n\t\t\t\tfor (element = element.firstChild; element; element = element.nextSibling) {\n\t\t\t\t\t_swapText(element, oldText, newText);\n\t\t\t\t}\n\t\t\t} else if (type === 3 || type === 4) {\n\t\t\t\telement.nodeValue = element.nodeValue.split(oldText).join(newText);\n\t\t\t}\n\t\t},\n\t\t_pushReversed = function(a, merge) {\n\t\t\tvar i = merge.length;\n\t\t\twhile (--i > -1) {\n\t\t\t\ta.push(merge[i]);\n\t\t\t}\n\t\t},\n\t\t_slice = function(a) { //don't use Array.prototype.slice.call(target, 0) because that doesn't work in IE8 with a NodeList that's returned by querySelectorAll()\n\t\t\tvar b = [],\n\t\t\t\tl = a.length,\n\t\t\t\ti;\n\t\t\tfor (i = 0; i !== l; b.push(a[i++])) {}\n\t\t\treturn b;\n\t\t},\n\t\t_isBeforeWordDelimiter = function(e, root, wordDelimiter) {\n\t\t\tvar next;\n\t\t\twhile (e && e !== root) {\n\t\t\t\tnext = e._next || e.nextSibling;\n\t\t\t\tif (next) {\n\t\t\t\t\treturn next.textContent.charAt(0) === wordDelimiter;\n\t\t\t\t}\n\t\t\t\te = e.parentNode || e._parent;\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\t\t_deWordify = function(e) {\n\t\t\tvar children = _slice(e.childNodes),\n\t\t\t\tl = children.length,\n\t\t\t\ti, child;\n\t\t\tfor (i = 0; i < l; i++) {\n\t\t\t\tchild = children[i];\n\t\t\t\tif (child._isSplit) {\n\t\t\t\t\t_deWordify(child);\n\t\t\t\t} else {\n\t\t\t\t\tif (i && child.previousSibling.nodeType === 3) {\n\t\t\t\t\t\tchild.previousSibling.nodeValue += (child.nodeType === 3) ? child.nodeValue : child.firstChild.nodeValue;\n\t\t\t\t\t} else if (child.nodeType !== 3) {\n\t\t\t\t\t\te.insertBefore(child.firstChild, child);\n\t\t\t\t\t}\n\t\t\t\t\te.removeChild(child);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t_setPositionsAfterSplit = function(element, vars, allChars, allWords, allLines, origWidth, origHeight) {\n\t\t\tvar cs = _getComputedStyle(element),\n\t\t\t\tpaddingLeft = _getStyle(element, \"paddingLeft\", cs),\n\t\t\t\tlineOffsetY = -999,\n\t\t\t\tborderTopAndBottom = _getStyle(element, \"borderBottomWidth\", cs) + _getStyle(element, \"borderTopWidth\", cs),\n\t\t\t\tborderLeftAndRight = _getStyle(element, \"borderLeftWidth\", cs) + _getStyle(element, \"borderRightWidth\", cs),\n\t\t\t\tpadTopAndBottom = _getStyle(element, \"paddingTop\", cs) + _getStyle(element, \"paddingBottom\", cs),\n\t\t\t\tpadLeftAndRight = _getStyle(element, \"paddingLeft\", cs) + _getStyle(element, \"paddingRight\", cs),\n\t\t\t\tlineThreshold = _getStyle(element, \"fontSize\") * 0.2,\n\t\t\t\ttextAlign = _getStyle(element, \"textAlign\", cs, true),\n\t\t\t\tcharArray = [],\n\t\t\t\twordArray = [],\n\t\t\t\tlineArray = [],\n\t\t\t\twordDelimiter = vars.wordDelimiter || \" \",\n\t\t\t\ttag = vars.span ? \"span\" : \"div\",\n\t\t\t\ttypes = vars.type || vars.split || \"chars,words,lines\",\n\t\t\t\tlines = (allLines && types.indexOf(\"lines\") !== -1) ? [] : null,\n\t\t\t\twords = (types.indexOf(\"words\") !== -1),\n\t\t\t\tchars = (types.indexOf(\"chars\") !== -1),\n\t\t\t\tabsolute = (vars.position === \"absolute\" || vars.absolute === true),\n\t\t\t\tlinesClass = vars.linesClass,\n\t\t\t\titerateLine = ((linesClass || \"\").indexOf(\"++\") !== -1),\n\t\t\t\tspaceNodesToRemove = [],\n\t\t\t\ti, j, l, node, nodes, isChild, curLine, addWordSpaces, style, lineNode, lineWidth, offset;\n\t\t\tif (iterateLine) {\n\t\t\t\tlinesClass = linesClass.split(\"++\").join(\"\");\n\t\t\t}\n\n\t\t\t//copy all the descendant nodes into an array (we can't use a regular nodeList because it's live and we may need to renest things)\n\t\t\tj = element.getElementsByTagName(\"*\");\n\t\t\tl = j.length;\n\t\t\tnodes = [];\n\t\t\tfor (i = 0; i < l; i++) {\n\t\t\t\tnodes[i] = j[i];\n\t\t\t}\n\n\t\t\t//for absolute positioning, we need to record the x/y offsets and width/height for every <div>. And even if we're not positioning things absolutely, in order to accommodate lines, we must figure out where the y offset changes so that we can sense where the lines break, and we populate the lines array.\n\t\t\tif (lines || absolute) {\n\t\t\t\tfor (i = 0; i < l; i++) {\n\t\t\t\t\tnode = nodes[i];\n\t\t\t\t\tisChild = (node.parentNode === element);\n\t\t\t\t\tif (isChild || absolute || (chars && !words)) {\n\t\t\t\t\t\toffset = node.offsetTop;\n\t\t\t\t\t\tif (lines && isChild && Math.abs(offset - lineOffsetY) > lineThreshold && (node.nodeName !== \"BR\" || i === 0)) { //we found some rare occasions where a certain character like &#8209; could cause the offsetTop to be off by 1 pixel, so we build in a threshold.\n\t\t\t\t\t\t\tcurLine = [];\n\t\t\t\t\t\t\tlines.push(curLine);\n\t\t\t\t\t\t\tlineOffsetY = offset;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (absolute) { //record offset x and y, as well as width and height so that we can access them later for positioning. Grabbing them at once ensures we don't trigger a browser paint & we maximize performance.\n\t\t\t\t\t\t\tnode._x = node.offsetLeft;\n\t\t\t\t\t\t\tnode._y = offset;\n\t\t\t\t\t\t\tnode._w = node.offsetWidth;\n\t\t\t\t\t\t\tnode._h = node.offsetHeight;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (lines) {\n\t\t\t\t\t\t\tif ((node._isSplit && isChild) || (!chars && isChild) || (words && isChild) || (!words && node.parentNode.parentNode === element && !node.parentNode._isSplit)) {\n\t\t\t\t\t\t\t\tcurLine.push(node);\n\t\t\t\t\t\t\t\tnode._x -= paddingLeft;\n\t\t\t\t\t\t\t\tif (_isBeforeWordDelimiter(node, element, wordDelimiter)) {\n\t\t\t\t\t\t\t\t\tnode._wordEnd = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (node.nodeName === \"BR\" && ((node.nextSibling && node.nextSibling.nodeName === \"BR\") || i === 0)) { //two consecutive <br> tags signify a new [empty] line. Also, if the entire block of content STARTS with a <br>, add a line.\n\t\t\t\t\t\t\t\tlines.push([]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (i = 0; i < l; i++) {\n\t\t\t\tnode = nodes[i];\n\t\t\t\tisChild = (node.parentNode === element);\n\t\t\t\tif (node.nodeName === \"BR\") {\n\t\t\t\t\tif (lines || absolute) {\n\t\t\t\t\t\tif (node.parentNode) {\n\t\t\t\t\t\t\tnode.parentNode.removeChild(node);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tnodes.splice(i--, 1);\n\t\t\t\t\t\tl--;\n\t\t\t\t\t} else if (!words) {\n\t\t\t\t\t\telement.appendChild(node);\n\t\t\t\t\t}\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif (absolute) {\n\t\t\t\t\tstyle = node.style;\n\t\t\t\t\tif (!words && !isChild) {\n\t\t\t\t\t\tnode._x += node.parentNode._x;\n\t\t\t\t\t\tnode._y += node.parentNode._y;\n\t\t\t\t\t}\n\t\t\t\t\tstyle.left = node._x + \"px\";\n\t\t\t\t\tstyle.top = node._y + \"px\";\n\t\t\t\t\tstyle.position = \"absolute\";\n\t\t\t\t\tstyle.display = \"block\";\n\t\t\t\t\t//if we don't set the width/height, things collapse in older versions of IE and the origin for transforms is thrown off in all browsers.\n\t\t\t\t\tstyle.width = (node._w + 1) + \"px\"; //IE is 1px short sometimes. Avoid wrapping\n\t\t\t\t\tstyle.height = node._h + \"px\";\n\t\t\t\t}\n\n\t\t\t\tif (!words && chars) {\n\t\t\t\t\t//we always start out wrapping words in their own <div> so that line breaks happen correctly, but here we'll remove those <div> tags if necessary and renest the characters directly into the element rather than inside the word <div>\n\t\t\t\t\tif (node._isSplit) {\n\t\t\t\t\t\tnode._next = node.nextSibling;\n\t\t\t\t\t\tnode.parentNode.appendChild(node); //put it at the end to keep the order correct.\n\n\t\t\t\t\t} else if (node.parentNode._isSplit) {\n\t\t\t\t\t\tnode._parent = node.parentNode;\n\t\t\t\t\t\tif (!node.previousSibling && node.firstChild) {\n\t\t\t\t\t\t\tnode.firstChild._isFirst = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (node.nextSibling && node.nextSibling.textContent === \" \" && !node.nextSibling.nextSibling) { //if the last node inside a nested element is just a space (like T<span>nested </span>), remove it otherwise it'll get placed in the wrong order. Don't remove it right away, though, because we need to sense when words/characters are before a space like _isBeforeWordDelimiter(). Removing it now would make that a false negative.\n\t\t\t\t\t\t\tspaceNodesToRemove.push(node.nextSibling);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tnode._next = (node.nextSibling && node.nextSibling._isFirst) ? null : node.nextSibling;\n\t\t\t\t\t\tnode.parentNode.removeChild(node);\n\t\t\t\t\t\tnodes.splice(i--, 1);\n\t\t\t\t\t\tl--;\n\t\t\t\t\t} else if (!isChild) {\n\t\t\t\t\t\toffset = (!node.nextSibling && _isBeforeWordDelimiter(node.parentNode, element, wordDelimiter)); //if this is the last letter in the word (and we're not breaking by lines and not positioning things absolutely), we need to add a space afterwards so that the characters don't just mash together\n\t\t\t\t\t\tif (node.parentNode._parent) {\n\t\t\t\t\t\t\tnode.parentNode._parent.appendChild(node);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (offset) {\n\t\t\t\t\t\t\tnode.parentNode.appendChild(_doc.createTextNode(\" \"));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (vars.span) {\n\t\t\t\t\t\t\tnode.style.display = \"inline\"; //so that word breaks are honored properly.\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcharArray.push(node);\n\t\t\t\t\t}\n\t\t\t\t} else if (node.parentNode._isSplit && !node._isSplit && node.innerHTML !== \"\") {\n\t\t\t\t\twordArray.push(node);\n\t\t\t\t} else if (chars && !node._isSplit) {\n\t\t\t\t\tif (vars.span) {\n\t\t\t\t\t\tnode.style.display = \"inline\";\n\t\t\t\t\t}\n\t\t\t\t\tcharArray.push(node);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ti = spaceNodesToRemove.length;\n\t\t\twhile (--i > -1) {\n\t\t\t\tspaceNodesToRemove[i].parentNode.removeChild(spaceNodesToRemove[i]);\n\t\t\t}\n\n\t\t\tif (lines) {\n\t\t\t\t//the next 7 lines just give us the line width in the most reliable way and figure out the left offset (if position isn't relative or absolute). We must set the width along with text-align to ensure everything works properly for various alignments.\n\t\t\t\tif (absolute) {\n\t\t\t\t\tlineNode = _doc.createElement(tag);\n\t\t\t\t\telement.appendChild(lineNode);\n\t\t\t\t\tlineWidth = lineNode.offsetWidth + \"px\";\n\t\t\t\t\toffset = (lineNode.offsetParent === element) ? 0 : element.offsetLeft;\n\t\t\t\t\telement.removeChild(lineNode);\n\t\t\t\t}\n\t\t\t\tstyle = element.style.cssText;\n\t\t\t\telement.style.cssText = \"display:none;\"; //to improve performance, set display:none on the element so that the browser doesn't have to worry about reflowing or rendering while we're renesting things. We'll revert the cssText later.\n\t\t\t\t//we can't use element.innerHTML = \"\" because that causes IE to literally delete all the nodes and their content even though we've stored them in an array! So we must loop through the children and remove them.\n\t\t\t\twhile (element.firstChild) {\n\t\t\t\t\telement.removeChild(element.firstChild);\n\t\t\t\t}\n\t\t\t\taddWordSpaces = (wordDelimiter === \" \" && (!absolute || (!words && !chars)));\n\t\t\t\tfor (i = 0; i < lines.length; i++) {\n\t\t\t\t\tcurLine = lines[i];\n\t\t\t\t\tlineNode = _doc.createElement(tag);\n\t\t\t\t\tlineNode.style.cssText = \"display:block;text-align:\" + textAlign + \";position:\" + (absolute ? \"absolute;\" : \"relative;\");\n\t\t\t\t\tif (linesClass) {\n\t\t\t\t\t\tlineNode.className = linesClass + (iterateLine ? i+1 : \"\");\n\t\t\t\t\t}\n\t\t\t\t\tlineArray.push(lineNode);\n\t\t\t\t\tl = curLine.length;\n\t\t\t\t\tfor (j = 0; j < l; j++) {\n\t\t\t\t\t\tif (curLine[j].nodeName !== \"BR\") {\n\t\t\t\t\t\t\tnode = curLine[j];\n\t\t\t\t\t\t\tlineNode.appendChild(node);\n\t\t\t\t\t\t\tif (addWordSpaces && node._wordEnd) {\n\t\t\t\t\t\t\t\tlineNode.appendChild(_doc.createTextNode(\" \"));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (absolute) {\n\t\t\t\t\t\t\t\tif (j === 0) {\n\t\t\t\t\t\t\t\t\tlineNode.style.top = (node._y) + \"px\";\n\t\t\t\t\t\t\t\t\tlineNode.style.left = (paddingLeft + offset) + \"px\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tnode.style.top = \"0px\";\n\t\t\t\t\t\t\t\tif (offset) {\n\t\t\t\t\t\t\t\t\tnode.style.left = (node._x - offset) + \"px\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (l === 0) { //if there are no nodes in the line (typically meaning there were two consecutive <br> tags, just add a non-breaking space so that things display properly.\n\t\t\t\t\t\tlineNode.innerHTML = \"&nbsp;\";\n\t\t\t\t\t} else if (!words && !chars) {\n\t\t\t\t\t\t_deWordify(lineNode);\n\t\t\t\t\t\t_swapText(lineNode, String.fromCharCode(160), \" \");\n\t\t\t\t\t}\n\t\t\t\t\tif (absolute) {\n\t\t\t\t\t\tlineNode.style.width = lineWidth;\n\t\t\t\t\t\tlineNode.style.height = node._h + \"px\";\n\t\t\t\t\t}\n\t\t\t\t\telement.appendChild(lineNode);\n\t\t\t\t}\n\t\t\t\telement.style.cssText = style;\n\t\t\t}\n\n\t\t\t//if everything shifts to being position:absolute, the container can collapse in terms of height or width, so fix that here.\n\t\t\tif (absolute) {\n\t\t\t\tif (origHeight > element.clientHeight) {\n\t\t\t\t\telement.style.height = (origHeight - padTopAndBottom) + \"px\";\n\t\t\t\t\tif (element.clientHeight < origHeight) { //IE8 and earlier use a different box model - we must include padding and borders\n\t\t\t\t\t\telement.style.height = (origHeight + borderTopAndBottom)+ \"px\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (origWidth > element.clientWidth) {\n\t\t\t\t\telement.style.width = (origWidth - padLeftAndRight) + \"px\";\n\t\t\t\t\tif (element.clientWidth < origWidth) { //IE8 and earlier use a different box model - we must include padding and borders\n\t\t\t\t\t\telement.style.width = (origWidth + borderLeftAndRight)+ \"px\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t_pushReversed(allChars, charArray);\n\t\t\t_pushReversed(allWords, wordArray);\n\t\t\t_pushReversed(allLines, lineArray);\n\t\t},\n\t\t_splitRawText = function(element, vars, wordStart, charStart) {\n\t\t\tvar tag = vars.span ? \"span\" : \"div\",\n\t\t\t\ttypes = vars.type || vars.split || \"chars,words,lines\",\n\t\t\t\t//words = (types.indexOf(\"words\") !== -1),\n\t\t\t\tchars = (types.indexOf(\"chars\") !== -1),\n\t\t\t\tabsolute = (vars.position === \"absolute\" || vars.absolute === true),\n\t\t\t\twordDelimiter = vars.wordDelimiter || \" \",\n\t\t\t\tspace = wordDelimiter !== \" \" ? \"\" : (absolute ? \"&#173; \" : \" \"),\n\t\t\t\twordEnd = vars.span ? \"</span>\" : \"</div>\",\n\t\t\t\twordIsOpen = true,\n\t\t\t\tspecialChars = vars.specialChars ? (typeof(vars.specialChars) === \"function\" ? vars.specialChars : _findSpecialChars) : null, //specialChars can be an array or a function. For performance reasons, we always set this local \"specialChars\" to a function to which we pass the remaining text and whatever the original vars.specialChars was so that if it's an array, it works with the _findSpecialChars() function.\n\t\t\t\ttext, splitText, i, j, l, character, hasTagStart, emojiPair1, emojiPair2, testResult,\n\t\t\t\tcontainer = _doc.createElement(\"div\"),\n\t\t\t\tparent = element.parentNode;\n\n\t\t\tparent.insertBefore(container, element);\n\t\t\tcontainer.textContent = element.nodeValue;\n\t\t\tparent.removeChild(element);\n\t\t\telement = container;\n\t\t\ttext = _getText(element);\n\t\t\thasTagStart = text.indexOf(\"<\") !== -1;\n\n\t\t\tif (vars.reduceWhiteSpace !== false) {\n\t\t\t\ttext = text.replace(_multipleSpacesExp, \" \").replace(_stripExp, \"\");\n\t\t\t}\n\t\t\tif (hasTagStart) {\n\t\t\t\ttext = text.split(\"<\").join(\"{{LT}}\"); //we can't leave \"<\" in the string, or when we set the innerHTML, it can be interpreted as a node\n\t\t\t}\n\t\t\tl = text.length;\n\t\t\tsplitText = ((text.charAt(0) === \" \") ? space : \"\") + wordStart();\n\t\t\tfor (i = 0; i < l; i++) {\n\t\t\t\tcharacter = text.charAt(i);\n\t\t\t\tif (specialChars && (testResult = specialChars(text.substr(i), vars.specialChars))) { // look for any specialChars that were declared. Remember, they can be passed in like {specialChars:[\"मी\", \"पा\", \"है\"]} or a function could be defined instead. Either way, the function should return the number of characters that should be grouped together for this \"character\".\n\t\t\t\t\tcharacter = text.substr(i, testResult || 1);\n\t\t\t\t\tsplitText += (chars && character !== \" \") ? charStart() + character + \"</\" + tag + \">\" : character;\n\t\t\t\t\ti += testResult - 1;\n\n\t\t\t\t} else if (character === wordDelimiter && text.charAt(i-1) !== wordDelimiter && i) {\n\t\t\t\t\tsplitText += wordIsOpen ? wordEnd : \"\";\n\t\t\t\t\twordIsOpen = false;\n\t\t\t\t\twhile (text.charAt(i + 1) === wordDelimiter) { //skip over empty spaces (to avoid making them words)\n\t\t\t\t\t\tsplitText += space;\n\t\t\t\t\t\ti++;\n\t\t\t\t\t}\n\t\t\t\t\tif (i === l-1) {\n\t\t\t\t\t\tsplitText += space;\n\t\t\t\t\t} else if (text.charAt(i + 1) !== \")\") {\n\t\t\t\t\t\tsplitText += space + wordStart();\n\t\t\t\t\t\twordIsOpen = true;\n\t\t\t\t\t}\n\n\t\t\t\t} else if (character === \"{\" && text.substr(i, 6) === \"{{LT}}\") {\n\t\t\t\t\tsplitText += chars ? charStart() + \"{{LT}}\" + \"</\" + tag + \">\" : \"{{LT}}\";\n\t\t\t\t\ti += 5;\n\n\t\t\t\t} else if ((character.charCodeAt(0) >= _emojiStart && character.charCodeAt(0) <= _emojiEnd) || (text.charCodeAt(i+1) >= 0xFE00 && text.charCodeAt(i+1) <= 0xFE0F)) { //special emoji characters use 2 or 4 unicode characters that we must keep together.\n\t\t\t\t\temojiPair1 = _emojiPairCode(text.substr(i, 2));\n\t\t\t\t\temojiPair2 = _emojiPairCode(text.substr(i + 2, 2));\n\t\t\t\t\tj = ((emojiPair1 >= _emojiRegionStart && emojiPair1 <= _emojiRegionEnd && emojiPair2 >= _emojiRegionStart && emojiPair2 <= _emojiRegionEnd) || (emojiPair2 >= _emojiModStart && emojiPair2 <= _emojiModEnd)) ? 4 : 2;\n\t\t\t\t\tsplitText += (chars && character !== \" \") ? charStart() + text.substr(i, j) + \"</\" + tag + \">\" : text.substr(i, j);\n\t\t\t\t\ti += j - 1;\n\t\t\t\t} else {\n\t\t\t\t\tsplitText += (chars && character !== \" \") ? charStart() + character + \"</\" + tag + \">\" : character;\n\t\t\t\t}\n\t\t\t}\n\t\t\telement.outerHTML = splitText + (wordIsOpen ? wordEnd : \"\");\n\t\t\tif (hasTagStart) {\n\t\t\t\t_swapText(parent, \"{{LT}}\", \"<\"); //note: don't perform this on \"element\" because that gets replaced with all new elements when we set element.outerHTML.\n\t\t\t}\n\t\t},\n\t\t_split = function(element, vars, wordStart, charStart) {\n\t\t\tvar children = _slice(element.childNodes),\n\t\t\t\tl = children.length,\n\t\t\t\tabsolute = (vars.position === \"absolute\" || vars.absolute === true),\n\t\t\t\ti, child;\n\n\t\t\tif (element.nodeType !== 3 || l > 1) {\n\t\t\t\tvars.absolute = false;\n\t\t\t\tfor (i = 0; i < l; i++) {\n\t\t\t\t\tchild = children[i];\n\t\t\t\t\tif (child.nodeType !== 3 || /\\S+/.test(child.nodeValue)) {\n\t\t\t\t\t\tif (absolute && child.nodeType !== 3 && _getStyle(child, \"display\", null, true) === \"inline\") { //if there's a child node that's display:inline, switch it to inline-block so that absolute positioning works properly (most browsers don't report offsetTop/offsetLeft properly inside a <span> for example)\n\t\t\t\t\t\t\tchild.style.display = \"inline-block\";\n\t\t\t\t\t\t\tchild.style.position = \"relative\";\n\t\t\t\t\t\t}\n\t\t\t\t\t\tchild._isSplit = true;\n\t\t\t\t\t\t_split(child, vars, wordStart, charStart); //don't split lines on child elements\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tvars.absolute = absolute;\n\t\t\t\telement._isSplit = true;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t_splitRawText(element, vars, wordStart, charStart);\n\n\t\t},\n\t\tp = SplitText.prototype;\n\n\tp.split = function(vars) {\n\t\tif (this.isSplit) {\n\t\t\tthis.revert();\n\t\t}\n\t\tthis.vars = vars = vars || this.vars;\n\t\tthis._originals.length = this.chars.length = this.words.length = this.lines.length = 0;\n\t\tvar i = this.elements.length,\n\t\t\ttag = vars.span ? \"span\" : \"div\",\n\t\t\twordStart = _cssClassFunc(vars.wordsClass, tag),\n\t\t\tcharStart = _cssClassFunc(vars.charsClass, tag),\n\t\t\torigHeight, origWidth, e;\n\t\t//we split in reversed order so that if/when we position:absolute elements, they don't affect the position of the ones after them in the document flow (shifting them up as they're taken out of the document flow).\n\t\twhile (--i > -1) {\n\t\t\te = this.elements[i];\n\t\t\tthis._originals[i] = e.innerHTML;\n\t\t\torigHeight = e.clientHeight;\n\t\t\torigWidth = e.clientWidth;\n\t\t\t_split(e, vars, wordStart, charStart);\n\t\t\t_setPositionsAfterSplit(e, vars, this.chars, this.words, this.lines, origWidth, origHeight);\n\t\t}\n\t\tthis.chars.reverse();\n\t\tthis.words.reverse();\n\t\tthis.lines.reverse();\n\t\tthis.isSplit = true;\n\t\treturn this;\n\t};\n\n\tp.revert = function() {\n\t\tif (!this._originals) {\n\t\t\tthrow(\"revert() call wasn't scoped properly.\");\n\t\t}\n\t\tvar i = this._originals.length;\n\t\twhile (--i > -1) {\n\t\t\tthis.elements[i].innerHTML = this._originals[i];\n\t\t}\n\t\tthis.chars = [];\n\t\tthis.words = [];\n\t\tthis.lines = [];\n\t\tthis.isSplit = false;\n\t\treturn this;\n\t};\n\n\tSplitText.selector = window.$ || window.jQuery || function(e) {\n\t\tvar selector = window.$ || window.jQuery;\n\t\tif (selector) {\n\t\t\tSplitText.selector = selector;\n\t\t\treturn selector(e);\n\t\t}\n\t\treturn (typeof(document) === \"undefined\") ? e : (document.querySelectorAll ? document.querySelectorAll(e) : document.getElementById((e.charAt(0) === \"#\") ? e.substr(1) : e));\n\t};\n\tSplitText.version = \"0.6.1\";\n\t\n})(gsap_TweenLite_js__WEBPACK_IMPORTED_MODULE_0__._gsScope);\n\nvar SplitText = gsap_TweenLite_js__WEBPACK_IMPORTED_MODULE_0__.globals.SplitText;\n\n\n//# sourceURL=webpack:///./node_modules/animation-felix/src/js/webgl/vendors/gsap/SplitText.js?");

/***/ }),

/***/ "./node_modules/animation-felix/src/js/webgl/sass/styles.scss":
/*!********************************************************************!*\
  !*** ./node_modules/animation-felix/src/js/webgl/sass/styles.scss ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n\n\n//# sourceURL=webpack:///./node_modules/animation-felix/src/js/webgl/sass/styles.scss?");

/***/ })

}]);